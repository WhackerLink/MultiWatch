<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Multi Watch</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">
    <link href="/css/styles.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.1.2/socket.io.js" crossorigin="anonymous"></script>
</head>
<body>
<%- include("partials/header") %>
<div class="container mt-4">
    <div class="row" id="network-container"></div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const socket = io();
        const darkModeToggle = document.getElementById('darkModeToggle');
        const body = document.body;

        if (localStorage.getItem('darkMode') === 'enabled') {
            body.classList.add('dark-mode');
            darkModeToggle.textContent = 'Light Mode';
        }

        darkModeToggle.addEventListener('click', function() {
            body.classList.toggle('dark-mode');
            if (body.classList.contains('dark-mode')) {
                localStorage.setItem('darkMode', 'enabled');
                darkModeToggle.textContent = 'Light Mode';
            } else {
                localStorage.removeItem('darkMode');
                darkModeToggle.textContent = 'Dark Mode';
            }
        });

        socket.on('networkUpdate', function(networks) {
            renderNetworks(networks);
        });

        function renderNetworks(networks) {
            const container = document.getElementById('network-container');
            container.innerHTML = '';

            networks.forEach(network => {
                const networkBox = document.createElement('div');
                networkBox.className = 'col-md-4';
                networkBox.innerHTML = `
                        <div class="network-box mb-4">
                            <h2>${network.name}</h2>
                            <div class="control-channels-container"></div>
                        </div>
                    `;

                const controlChannelsContainer = networkBox.querySelector('.control-channels-container');

                if (network.status === 'failed') {
                    controlChannelsContainer.innerHTML = `<p>Connection Failed</p>`;
                } else {
                    network.data.controlChannels.forEach(controlChannel => {
                        const controlChannelDiv = document.createElement('div');
                        controlChannelDiv.className = 'control-channel-box';
                        controlChannelDiv.innerHTML = `
                                <h3>${controlChannel}</h3>
                                <div class="voice-channels-list"></div>
                            `;
                        controlChannelsContainer.appendChild(controlChannelDiv);

                        const voiceChannelsList = controlChannelDiv.querySelector('.voice-channels-list');
                        network.data.activeVoiceChannels.forEach(voiceChannel => {
                            if (voiceChannel.controlChannel === controlChannel) {
                                const voiceChannelDiv = document.createElement('div');
                                voiceChannelDiv.className = 'card mb-2';
                                voiceChannelDiv.innerHTML = `
                                        <div class="card-body">
                                            <h5 class="card-title">Voice Channel: ${voiceChannel.frequency}</h5>
                                            <p class="card-text">Dst ID: ${voiceChannel.dstId}</p>
                                            <p class="card-text">Src ID: ${voiceChannel.srcId}</p>
                                        </div>
                                    `;
                                voiceChannelsList.appendChild(voiceChannelDiv);
                            }
                        });
                    });
                }

                container.appendChild(networkBox);
            });
        }
    });
</script>
</body>
</html>